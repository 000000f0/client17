{"ast":null,"code":"'use strict';\n\nconst {\n  EmbedBuilder: BuildersEmbed\n} = require('@discordjs/builders');\nconst {\n  isJSONEncodable\n} = require('@discordjs/util');\nconst {\n  toSnakeCase\n} = require('../util/Transformers');\nconst {\n  resolveColor\n} = require('../util/Util');\n\n/**\n * Represents an embed builder.\n * @extends {BuildersEmbed}\n */\nclass EmbedBuilder extends BuildersEmbed {\n  constructor(data) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Sets the color of this embed\n   * @param {?ColorResolvable} color The color of the embed\n   * @returns {EmbedBuilder}\n   */\n  setColor(color) {\n    return super.setColor(color && resolveColor(color));\n  }\n\n  /**\n   * Creates a new embed builder from JSON data\n   * @param {EmbedBuilder|Embed|APIEmbed} other The other data\n   * @returns {EmbedBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\nmodule.exports = EmbedBuilder;\n\n/**\n * @external BuildersEmbed\n * @see {@link https://discord.js.org/docs/packages/builders/stable/EmbedBuilder:Class}\n */","map":{"version":3,"names":["EmbedBuilder","BuildersEmbed","require","isJSONEncodable","toSnakeCase","resolveColor","constructor","data","setColor","color","from","other","toJSON","module","exports"],"sources":["/Users/williedejongh/Downloads/ark3-main4/node_modules/discord.js/src/structures/EmbedBuilder.js"],"sourcesContent":["'use strict';\n\nconst { EmbedBuilder: BuildersEmbed } = require('@discordjs/builders');\nconst { isJSONEncodable } = require('@discordjs/util');\nconst { toSnakeCase } = require('../util/Transformers');\nconst { resolveColor } = require('../util/Util');\n\n/**\n * Represents an embed builder.\n * @extends {BuildersEmbed}\n */\nclass EmbedBuilder extends BuildersEmbed {\n  constructor(data) {\n    super(toSnakeCase(data));\n  }\n\n  /**\n   * Sets the color of this embed\n   * @param {?ColorResolvable} color The color of the embed\n   * @returns {EmbedBuilder}\n   */\n  setColor(color) {\n    return super.setColor(color && resolveColor(color));\n  }\n\n  /**\n   * Creates a new embed builder from JSON data\n   * @param {EmbedBuilder|Embed|APIEmbed} other The other data\n   * @returns {EmbedBuilder}\n   */\n  static from(other) {\n    return new this(isJSONEncodable(other) ? other.toJSON() : other);\n  }\n}\n\nmodule.exports = EmbedBuilder;\n\n/**\n * @external BuildersEmbed\n * @see {@link https://discord.js.org/docs/packages/builders/stable/EmbedBuilder:Class}\n */\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA,YAAY,EAAEC;AAAc,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtE,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACtD,MAAM;EAAEE;AAAY,CAAC,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AACvD,MAAM;EAAEG;AAAa,CAAC,GAAGH,OAAO,CAAC,cAAc,CAAC;;AAEhD;AACA;AACA;AACA;AACA,MAAMF,YAAY,SAASC,aAAa,CAAC;EACvCK,WAAWA,CAACC,IAAI,EAAE;IAChB,KAAK,CAACH,WAAW,CAACG,IAAI,CAAC,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;AACA;EACEC,QAAQA,CAACC,KAAK,EAAE;IACd,OAAO,KAAK,CAACD,QAAQ,CAACC,KAAK,IAAIJ,YAAY,CAACI,KAAK,CAAC,CAAC;EACrD;;EAEA;AACF;AACA;AACA;AACA;EACE,OAAOC,IAAIA,CAACC,KAAK,EAAE;IACjB,OAAO,IAAI,IAAI,CAACR,eAAe,CAACQ,KAAK,CAAC,GAAGA,KAAK,CAACC,MAAM,EAAE,GAAGD,KAAK,CAAC;EAClE;AACF;AAEAE,MAAM,CAACC,OAAO,GAAGd,YAAY;;AAE7B;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}